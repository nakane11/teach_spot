<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}][${thread}][${node}/${function}:${line}]: ${message}"/>
  <arg name="gui" default="true" />
  <arg name="pull_arm" default="false" />
  <arg name="look" default="false" />

  <arg name="addpose_topic" default="/follow_waypoints/initialpose"/>
  <arg name="posearray_topic" default="/waypoints"/>

  <arg name="input_camera_info" value="/head_camera/rgb/camera_info" />
  <arg name="input_depth_image" value="/head_camera/depth_registered/hw_registered/image_rect" />
  <arg name="input_pose_array" value="/edgetpu_human_pose_estimator/output/poses" />

  <include file="$(find teach_spot)/launch/speech_recognition.launch" >
    <arg name="language" default="ja-JP" />
    <arg name="continuous" default="true" />
  </include>

  <node name="speech_to_roman"
        pkg="teach_spot" type="speech_to_roman.py" >
    <remap from="~output" to="/Tablet/voice_roman" />
  </node>

  <group if="$(arg pull_arm)" >
    <include file="$(find virtual_force_drag)/launch/fetch_virtual_force_drag.launch" >
    </include>
  </group>
  
  <group if="$(arg look)" >
    <node name="people_pose_2d_to_3d"
          pkg="teach_spot" type="people_pose_2d_to_3d.py"
          output="screen">
      <remap from="~input/pose" to="$(arg input_pose_array)" />
      <remap from="~input/info" to="$(arg input_camera_info)" />
      <remap from="~input/depth" to="$(arg input_depth_image)" />
      <rosparam subst_value="true">
        approximate_sync: true
        queue_size: 100
      </rosparam>
    </node>

    <node name="people_pose_array_accumulator"
          pkg="teach_spot" type="people_pose_array_accumulator.py"
          output="screen">
      <remap from="~input" to="people_pose_2d_to_3d/output/pose" />
      <param name="base_frame_id" value="base_link"/>
    </node>

    <node pkg="roseus" type="roseus" name="look_for_human" output="screen"
          args="$(find teach_spot)/euslisp/look-for-human-fetch.l" >
      <param name="robot" value="fetch"/>
      <param name="pull_arm" value="$(arg pull_arm)"/>
      <rosparam>
        footprint_ns:
        - /move_base/global_costmap
        - /move_base/local_costmap
        - /safe_teleop_base/local_costmap
      </rosparam>
    </node>

    <include file="$(find teach_spot)/launch/human_filter_fetch.launch" >
      <arg name="gui" value="false" />
    </include>
  </group>
  
  <node pkg="follow_waypoints" type="follow_waypoints_server" name="follow_waypoints" output="screen" clear_params="true">
    <param name="base_frame_id" value="base_link"/>
    <param name="goal_frame_id" value="map"/>
    <param name="odom_frame_id" value="odom_combined" />
    <param name="addpose_topic" value="$(arg addpose_topic)"/>
    <param name="posearray_topic" value="$(arg posearray_topic)"/>
    <param name="waypoint_distance_tolerance" value="0.5"/>
    <param name="timeout" value="30"/>
  </node>
  
  <node pkg="roseus" type="roseus" name="teach_spot_demo" output="screen"
        args="$(find teach_spot)/euslisp/teach-spot-demo.l" >
    <param name="robot" value="fetch"/>
  </node>

  <group if="$(arg gui)" >
    <node name="$(anon rviz)"
          pkg="rviz" type="rviz"
          args="-d $(find teach_spot)/launch/config/teach_spot_fetch.rviz" >
    </node>
  </group>
  
</launch>
