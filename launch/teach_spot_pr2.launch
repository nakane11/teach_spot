<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}][${thread}][${node}/${function}:${line}]: ${message}"/>
  <arg name="gui" default="true" />
  <arg name="larm" default="true" />
  <arg name="pull_arm" default="true" />
  <arg name="look" default="true" />
  <arg name="safe" default="true" />
  <arg name="filter" default="true" />
  <arg name="virtual_force_params" default="sample_pr2_pull_arm.yaml" />
  
  <arg name="addpose_topic" default="/follow_waypoints/initialpose"/>
  <arg name="posearray_topic" default="/waypoints"/>
  

  <arg if="$(arg larm)" name="arm" value="larm" />
  <arg unless="$(arg larm)" name="arm" value="rarm" />

  <include file="$(find teach_spot)/launch/speech_recognition.launch" >
    <arg name="language" default="ja-JP" />
    <arg name="continuous" default="true" />
  </include>

  <node name="speech_to_roman"
        pkg="teach_spot" type="speech_to_roman.py" >
    <remap from="~output" to="/Tablet/voice_roman" />
  </node>
  
  <group if="$(arg pull_arm)" >
    <include file="$(find virtual_force_drag)/launch/pr2_virtual_force_drag.launch" >
      <arg name="larm" value="$(arg larm)" />
      <arg name="look" value="$(arg look)" />
      <arg name="safe" value="$(arg safe)" />
      <arg name="input_file" value="$(arg virtual_force_params)" />
    </include>
  </group>

  <group if="$(arg filter)" >
    <include file="$(find teach_spot)/launch/human_filter_pr2.launch" >
      <arg name="gui" value="false" />
      <arg name="arm" value="$(arg arm)" />
    </include>
  </group>
  
  <node pkg="follow_waypoints" type="follow_waypoints_server" name="follow_waypoints" output="screen" clear_params="true">
    <param name="base_frame_id" value="base_footprint"/>
    <param name="goal_frame_id" value="map"/>
    <param name="odom_frame_id" value="odom_combined" />
    <param name="addpose_topic" value="$(arg addpose_topic)"/>
    <param name="posearray_topic" value="$(arg posearray_topic)"/>
    <param name="waypoint_distance_tolerance" value="0.5"/>
    <param name="timeout" value="30"/> 
 </node>

  <node pkg="roseus" type="roseus" name="teach_spot_demo" output="screen"
        args="$(find teach_spot)/euslisp/teach-spot-demo.l" >
    <param name="robot" value="pr2"/>
  </node>

  <group if="$(arg gui)" >
    <node name="$(anon rviz)"
          pkg="rviz" type="rviz"
          args="-d $(find teach_spot)/launch/config/teach_spot_pr2.rviz" >
    </node>
  </group>
  
</launch>
